#!/usr/bin/env ruby

require 'digest/md5'
require 'colorize'
require_relative 'lib/terminal_formatting'
include TerminalFormatting

require 'pry'

BUILD = "16"

if ARGV.length != 1
  puts "Usage: hash-tree ONE_FILE_OR_DIRECTORY"
  return false
end

# BEGIN get hexdigest ##########################################################
hexdigest = 0

is_dir = Dir.exist? ARGV[0]

if is_dir
  Dir.chdir ARGV[0] do
    files = Dir["**/*"].reject { |s| Dir.exist? s }
    hexdigest = Digest::MD5.hexdigest(files.map { |s| File.read s }.join).hex
  end
else
  hexdigest = Digest::MD5.hexdigest(File.read(ARGV[0])).hex
end

hash_random = Random.new(hexdigest.to_i)
# END get hexdigest ############################################################

needles = %w[! ! + ^]
ornaments = %w[@ o {} % G C]
string_segments = %w[#]
lights = %w[*]

stocking = [
  ' [###]',
  '  ]  |',
  '(___/ '
]

bow = [
  '(\m/)',
  '//*\\'
]

candy_cane = [
  ' _ ',
  '( |',
  '  |',
  '  |'
]

upturned_stocking = [
  '  ___ ',
  ' /   )',
  '|  [  ',
  '[###] '
]

star = [
  '  /\  ',
  '< -- >',
  ' \/\/ '
]

train = [
  '   oo~o~  ____ ',
  '  _][_n_n_|00[ ',
  'c(___##_##| +| ',
  ' // oo-OOO oo ='
]

tall_present = [
  ' (\/) ',
  '[____]',
  '|    |',
  '|____|'
]

short_present = [
  ' (\*/) ',
  '[_____]',
  '|_____|'
]

characters_needed = 2
growth_multiplier = 1.0

short_row_every = [3, 4, 7][hash_random.rand(3)]

20.times do |i|
  short_row = false

  if (i + 1) % short_row_every == 0
    short_row = true
    growth_multiplier += 0.25
    characters_needed = 6 * growth_multiplier
  end

  characters_to_print = characters_needed * growth_multiplier
  # Round to nearest multiple of 2
  characters_to_print = (characters_to_print / 2.0).round * 2

  # BEGIN build the row
  row = ""

  while characters_to_print > 0 do
    old_row_length = row.length
    if hash_random.rand(100) <= 10
      # Ornament
      row += ornaments[hash_random.rand(ornaments.length)]
    elsif hash_random.rand(100) <= 10
      row += lights[hash_random.rand(lights.length)]
    else
      row += needles[hash_random.rand(needles.length)]
    end

    new_row_length = row.length
    characters_to_print -= new_row_length - old_row_length
  end

  row = center(row)

  # Paint each needle green
  needles.each do |character|
    row = row.gsub character, character.green
  end

  # Colorize ornaments
  ornaments.each do |ornament|
    row = row.gsub(ornament) do |m|
      ornament.send([:red, :yellow, :white][hash_random.rand(3)])
    end
  end

  # Colorize lights
  lights.each do |light|
    row = row.gsub(light) do
      light = light.send([:red, :blue, :white][hash_random.rand(3)]).blink
    end
  end

  puts row
  # BEGIN build the row

  characters_needed += 2

end

puts center("|  |").yellow
# TODO: random jingles featuring filename and hash
filename = File.basename(ARGV[0])
filename << "/" if is_dir
puts center(
  "hash-tree build #{BUILD} wishes you a merry #{filename},")
  .red.on_white
puts center("and a happy #{hexdigest.to_s(16)}!").white.on_red
